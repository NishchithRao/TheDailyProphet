{"version":3,"sources":["helpers/Vars.js","helpers/apicalls.js","components/Header.js","components/TopNews.js","helpers/StringHelper.js","components/Loader.js","App.js","serviceWorker.js","index.js"],"names":["URL","process","KEY","AllNews","a","fetch","response","json","data","SearchNews","query","Header","props","date","Date","className","getDate","getMonth","getFullYear","time","TopNews","topnews","classType","featured","index","headline","main","split","string","substring","indexOf","editTitle","multimedia","length","alt","src","url","lead_paragraph","href","web_url","Loader","App","useState","setData","fetchTime","setFetchTime","active","setActive","HomeData","then","getHours","getMinutes","getSeconds","localStorage","setItem","JSON","stringify","docs","parse","getItem","catch","err","console","log","useEffect","ToggleBg","position","whiteBg","colorWhite","style","backgroundColor","color","onClick","map","q","key","SearchData","item","target","rel","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","alert","ReactDOM","render","StrictMode","document","getElementById","origin","addEventListener","headers","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ad13e9e5.chunk.js","sourcesContent":["export const URL = process.env.REACT_APP_URL;\r\nexport const KEY = process.env.REACT_APP_KEY;\r\n","import {URL,KEY} from './Vars.js';\r\n\r\nexport const AllNews =  async () => {\r\n\tconst response = await fetch(`${URL}=${KEY}`);\r\n\tconst data = await response.json();\r\n\treturn data;\r\n}\r\n\r\nexport const SearchNews = async query => {\r\n\tconst response = await fetch(`${URL}=${KEY}&q=${query}`);\r\n\tconst data = await response.json();\r\n\treturn data ;\r\n}\r\n","import React from 'react';\r\nimport '../css/Header.css';\r\n\r\nconst Header = props => {\r\n\tconst date = new Date();\r\n\treturn(\r\n\t\t<div className=\"header\">\r\n\t\t<h1>DAILY PROPHET</h1>\r\n\t\t<div className=\"timeDet\">\r\n\t\t<div className=\"currentDate\">{`${date.getDate()}/${date.getMonth()}/${date.getFullYear()}`}</div>\r\n\t\t<div className=\"fetchTime\">Fetched At:{props.time}</div>\r\n\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"../css/TopNews.css\";\r\nimport \"../css/SubNews.css\";\r\nimport {\r\n  coloredWord,\r\n  editTitle,\r\n} from \"../helpers/StringHelper.js\";\r\nconst TopNews = ({ topnews, classType, featured,index }) => {\r\n  return (\r\n    <div className={classType}>\r\n      {featured && (\r\n          <div className=\"featuredTitle\">\r\n            {coloredWord(topnews.headline.main)}\r\n          </div>\r\n      )}\r\n      <div className=\"title\">\r\n        {featured ? editTitle(topnews.headline.main) : topnews.headline.main}\r\n      </div>\r\n\r\n      {topnews.multimedia.length !== 0 && (\r\n        <div className=\"imgCon\">\r\n          <img\r\n            alt={topnews.headline.main}\r\n            src={\"http://www.nytimes.com/\" + topnews.multimedia[0].url}\r\n          />\r\n        </div>\r\n      )}\r\n      <p>\r\n        {topnews.lead_paragraph}\r\n      </p>\r\n      <button>\r\n        <a href={topnews.web_url}>Read More</a>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopNews;\r\n","export const restTitle = string => {\r\n\treturn string.substring(1,string.lastIndexOf(\"-\"));\r\n}\r\n\r\nexport const coloredWord = string => {\r\n\treturn string.split(\" \")[0];\r\n}\r\n\r\nexport const editContent = string => {\r\n\treturn string && string.substring(1,string.lastIndexOf(\"[\"));\r\n}\r\n\r\nexport const editTitle = string => {\r\n\treturn string.substring(string.indexOf(\" \"));\r\n}\r\n\r\nexport const subTitle = string => {\r\n\treturn string.substring(string.lastIndexOf(\"/\"));\r\n}\r\n","import React from 'react';\r\nimport '../css/Loader.css';\r\n\r\nconst Loader = () => {\r\n\treturn(\r\n\t\t<div className=\"loader\">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n\t);\r\n}\r\n\r\nexport default Loader;\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport \"./App.css\";\r\nimport { AllNews, SearchNews } from \"./helpers/apicalls\";\r\nimport Header from \"./components/Header\";\r\nimport TopNews from \"./components/TopNews\";\r\nimport Loader from \"./components/Loader\";\r\n\r\nfunction App() {\r\n  const [data, setData] = useState([]);\r\n  const [fetchTime,setFetchTime] = useState(\"\");\r\n  const query = [\r\n    \"India\",\r\n    \"entertainment\",\r\n    \"tech\",\r\n    \"sport\",\r\n    \"politics\",\r\n    \"education\",\r\n    \"business\",\r\n    \"crime\",\r\n  ];\r\n  const [active, setActive] = useState(0);\r\n  const date = new Date();\r\n  const HomeData = () => {\r\n    AllNews()\r\n      .then((data) => {\r\n        setFetchTime(`${date.getHours()<10 ? '0'+date.getHours(): date.getHours()}:${date.getMinutes()<10 ? '0'+date.getMinutes():date.getMinutes()}:${date.getSeconds()}`);\r\n        localStorage.setItem(\"data\", JSON.stringify(data));\r\n        data.response\r\n          ? setData(data.response.docs)\r\n          : setData(JSON.parse(localStorage.getItem(\"data\")));\r\n      })\r\n      .catch((err) =>\r\n        localStorage.getItem(\"data\")\r\n          ? setData(JSON.parse(localStorage.getItem(\"data\")).response.docs)\r\n          : data.response\r\n          ? setData(JSON.parse(localStorage.getItem(\"data\")).response.docs)\r\n          : console.log(err)\r\n      );\r\n  };\r\n  useEffect(HomeData, []);\r\n  const SearchData = (query) => {\r\n    setData([]);\r\n    SearchNews(query)\r\n      .then((data) => {\r\n        localStorage.setItem(\r\n          \"date\",\r\n          `${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`\r\n        );\r\n        data.response\r\n          ? setData(data.response.docs)\r\n          : setData(JSON.parse(localStorage.getItem(\"data\")).response.docs);\r\n      })\r\n      .catch((err) =>\r\n        localStorage.getItem(\"data\")\r\n          ? setData(JSON.parse(localStorage.getItem(\"data\")).response.docs)\r\n          : console.log(err)\r\n      );\r\n  };\r\n  const ToggleBg = (position) => {\r\n    active === position ? setActive(0) : setActive(position);\r\n  };\r\n  const whiteBg = (position) => {\r\n    return active === position ? \"#fff\" : \"#654321\";\r\n  };\r\n  const colorWhite = (position) => {\r\n    return active === position ? \"#654321\" : \"#fff\";\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      <Header time={fetchTime} />\r\n      <div className=\"divider\"></div>\r\n      <div className=\"categories\">\r\n        <button\r\n          style={{ backgroundColor: whiteBg(0), color: colorWhite(0) }}\r\n          onClick={() => {\r\n            ToggleBg(0);\r\n            HomeData();\r\n          }}\r\n        >\r\n          Worldwide\r\n        </button>{\" \"}\r\n        {query.map((q, index) => (\r\n          <button\r\n            key={index}\r\n            style={{\r\n              backgroundColor: whiteBg(index + 1),\r\n              color: colorWhite(index + 1),\r\n            }}\r\n            onClick={() => {\r\n              SearchData(q);\r\n              ToggleBg(index + 1);\r\n            }}\r\n          >\r\n            {q}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <div className=\"divider\"></div>\r\n      {!data.length ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className=\"container\">\r\n          <div className=\"Items\">\r\n            <div className=\"LargeItems\">\r\n              {data.map(\r\n                (item, index) =>\r\n                  index <= data.length / 3 && (\r\n                    <Fragment key={index}>\r\n                      <div className=\"mainNews\">\r\n                        <TopNews\r\n                          classType=\"topnews\"\r\n                          featured={true}\r\n                          index={index}\r\n                          topnews={item}\r\n                        />\r\n                        <div className=\"divider\"></div>\r\n                      </div>\r\n                    </Fragment>\r\n                  )\r\n              )}\r\n            </div>\r\n            <div className=\"smallItems\">\r\n              {data.map(\r\n                (item, index) =>\r\n                  index > data.length / 3 && (\r\n                    <Fragment key={index}>\r\n                      <TopNews topnews={item} classType=\"smallnews\" />\r\n                      <div className=\"single_divider\"></div>\r\n                    </Fragment>\r\n                  )\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"footer\">\r\n            <div className=\"single_divider\"></div>\r\n            <div className=\"developer\">\r\n              Designed and Developed by{\" \"}\r\n              <a\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                href=\"https://www.instagram.com/dev_monk_4/\"\r\n              >\r\n                Nishchith Rao\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n\t    alert('Error during service worker registration:');\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n\t    alert(\"offline\");\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}